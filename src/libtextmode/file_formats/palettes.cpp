#include "palettes.h"

std::vector<rgb_t> ansi_ega_palette = {
    {0x00, 0x00, 0x00}, {0x2a, 0x00, 0x00}, {0x00, 0x2a, 0x00}, {0x2a, 0x15, 0x00},
    {0x00, 0x00, 0x2a}, {0x2a, 0x00, 0x2a}, {0x00, 0x2a, 0x2a}, {0x2a, 0x2a, 0x2a},

    {0x15, 0x15, 0x15}, {0x3f, 0x15, 0x15}, {0x15, 0x3f, 0x15}, {0x3f, 0x3f, 0x15},
    {0x15, 0x15, 0x3f}, {0x3f, 0x15, 0x3f}, {0x15, 0x3f, 0x3f}, {0x3f, 0x3f, 0x3f}
};

std::vector<rgb_t> binary_text_ega_palette = {
    {0x00, 0x00, 0x00}, {0x00, 0x00, 0x2a}, {0x00, 0x2a, 0x00}, {0x00, 0x2a, 0x2a},
    {0x2a, 0x00, 0x00}, {0x2a, 0x00, 0x2a}, {0x2a, 0x15, 0x00}, {0x2a, 0x2a, 0x2a},

    {0x15, 0x15, 0x15}, {0x15, 0x15, 0x3f}, {0x15, 0x3f, 0x15}, {0x15, 0x3f, 0x3f},
    {0x3f, 0x15, 0x15}, {0x3f, 0x15, 0x3f}, {0x3f, 0x3f, 0x15}, {0x3f, 0x3f, 0x3f}
};

palette_t create_palette(std::vector<rgb_t>& ega_palette)
{
    palette_t palette;
    for(auto& ega_value:ega_palette) {
        palette.push(ega_value);
    }
    return palette;
}

palette_t create_ansi_palette()
{
    return create_palette(ansi_ega_palette);
}

palette_t create_binary_text_palette()
{
    return create_palette(binary_text_ega_palette);
}
